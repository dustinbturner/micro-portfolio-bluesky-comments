---
interface Props {
  uri: string;
}

interface BlueskyPost {
  post: {
    author: {
      avatar: string;
      displayName: string;
      handle: string;
    };
    record: {
      text: string;
    };
    indexedAt: string;
    likeCount: number;
    repostCount: number;
    replyCount: number;
  };
  replies?: BlueskyPost[];
}

const { uri } = Astro.props;

// Get the post ID for the Bluesky link
const postId = uri.split('/').pop();
const blueskyLink = `https://bsky.app/profile/${uri.split('/')[2]}/post/${postId}`;

let comments: BlueskyPost[] = [];
let error: string | null = null;

if (uri) {
  try {
    const endpoint = `https://api.bsky.app/xrpc/app.bsky.feed.getPostThread?uri=${encodeURIComponent(uri)}`;

    const response = await fetch(endpoint, {
      method: 'GET',
      headers: {
        'Accept': 'application/json'
      }
    });

    if (!response.ok) {
      throw new Error(`Failed to fetch comments: ${response.status}`);
    }

    const data = await response.json();
    if (data.thread?.replies) {
      comments = data.thread.replies;
    }
  } catch (e) {
    error = e instanceof Error ? e.message : String(e);
    console.error('Error:', e);
  }
}
---

<div class="mt-8 pt-4">
  <h2 class="text-2xl font-semibold text-neutral-800 mb-4">Comments</h2>
  <p class="mb-6 text-black/75">
    Reply on Bluesky <a href={blueskyLink} target="_blank" rel="noopener noreferrer" class="font-sans text-current underline underline-offset-[3px] decoration-black/30 hover:text-black hover:decoration-black/50 transition-colors duration-300">here</a> to join the conversation.
  </p>
  
  {error && <p class="text-red-500">Error loading comments: {error}</p>}
  
  {!error && comments.length === 0 && (
    <p class="text-black/60">No comments yet. Be the first to comment!</p>
  )}

  {!error && comments.length > 0 && (
    <div class="space-y-6">
      {comments.map((comment) => (
        <div class="rounded-lg border border-neutral-400 p-4 bg-white hover:border-neutral-500 transition-colors">
          <div class="flex items-center gap-3 mb-3">
            <img src={comment.post.author.avatar} alt={`${comment.post.author.displayName}'s avatar`} class="w-10 h-10 rounded-full" />
            <div class="flex flex-col">
              <span class="font-medium text-neutral-800">{comment.post.author.displayName}</span>
              <span class="text-sm text-neutral-600">@{comment.post.author.handle}</span>
            </div>
          </div>
          <div class="text-neutral-700 mb-3">
            {comment.post.record.text}
          </div>
          <div class="flex justify-between items-center text-sm text-neutral-600">
            <div class="flex gap-4">
              <span>{comment.post.replyCount || 0} üí¨</span>
              <span>{comment.post.repostCount || 0} üîÅ</span>
              <span>{comment.post.likeCount || 0} ‚ù§Ô∏è</span>
            </div>
            <time datetime={comment.post.indexedAt}>
              {new Date(comment.post.indexedAt).toLocaleDateString()}
            </time>
          </div>
          {comment.replies && comment.replies.length > 0 && (
            <div class="mt-4 ml-6 space-y-4">
              {comment.replies.map((reply) => (
                <div class="rounded-lg border border-neutral-400 p-4 bg-white hover:border-neutral-500 transition-colors">
                  <div class="flex items-center gap-3 mb-3">
                    <img src={reply.post.author.avatar} alt={`${reply.post.author.displayName}'s avatar`} class="w-8 h-8 rounded-full" />
                    <div class="flex flex-col">
                      <span class="font-medium text-neutral-800">{reply.post.author.displayName}</span>
                      <span class="text-sm text-neutral-600">@{reply.post.author.handle}</span>
                    </div>
                  </div>
                  <div class="text-neutral-700 mb-3">
                    {reply.post.record.text}
                  </div>
                  <div class="flex justify-between items-center text-sm text-neutral-600">
                    <div class="flex gap-4">
                      <span>{reply.post.replyCount || 0} üí¨</span>
                      <span>{reply.post.repostCount || 0} üîÅ</span>
                      <span>{reply.post.likeCount || 0} ‚ù§Ô∏è</span>
                    </div>
                    <time datetime={reply.post.indexedAt}>
                      {new Date(reply.post.indexedAt).toLocaleDateString()}
                    </time>
                  </div>
                </div>
              ))}
            </div>
          )}
        </div>
      ))}
    </div>
  )}
</div>